#- hosts: localhost
#  gather_facts: false
#  pre_tasks:
#  - name: Load configuration
#    include_role:
#      name: ekara.configuration
#  tasks:
#- set_fact:
#    ekara_plf: "{{ekara_configuration_params.environment.name}}_{{ekara_configuration_params.environment.qualifier}}"
- name: Gather instances
  os_server_facts:
- name: Filter nodes
  set_fact:
    ekara_instances_plf: "{{ (ekara_instances_plf|default([])) + [ item ] }}"
  with_items: "{{openstack_servers}}"
  when:
  - item.metadata.Stack_id is defined
  - item.metadata.Stack_name == ekara_configuration_params.environment.name
  - item.metadata.Stack_qualifier == ekara_configuration_params.environment.qualifier
  loop_control:
    label: "{{ item.name }}"
- set_fact:
    ekara_instances: "{{ekara_instances_plf|length|int}}"
- debug: var=ekara_instances
- name: Gather instances (managers)
  set_fact:
    ekara_instances_managers: "{{ (ekara_instances_managers|default([])) + [ item ] }}"
  with_items: "{{openstack_servers}}"
  when:
  - item.metadata.Swarm_type is defined
  - item.metadata.Swarm_type == (ekara_plf+'_manager')
  loop_control:
    label: "{{ item.name }}"
- set_fact:
    ekara_instances_managers: "{{(ekara_instances_managers|default([]))|length|int}}"
- debug:
    msg: "{{ekara_instances_managers|int}} manager(s) already exist"
- name: Estimate Swarm managers count
  set_fact:
    ekara_managers: >
      {% set ns = namespace(managers=1) %}{% for x in range(1,([5,(ekara_instances|int)]|min)+1) %}
      {%if x % 2 == 1%}{% set ns.managers = x %}{%endif%}{%endfor%}{{ns.managers}}
- name: Check managers to create
  set_fact:
    ekara_manager_tocreate: "{{ ekara_managers|int - ekara_instances_managers|int }}"
- debug:
    msg: "Add {{ekara_manager_tocreate|int}} managers"
- name: Add swarm tag on new instances
  os_server_metadata:
    state: present
    name: "{{item.id}}"
    meta:
      Swarm_type: "{{ekara_plf}}_{{swarm_type}}"
  vars:
    swarm_type: "{% if index_manager < ekara_manager_tocreate|int %}manager{%else%}worker{%endif%}"
  loop: "{{ekara_instances_plf}}"
  loop_control:
    index_var: index_manager
    label: "{{item.id}} - {{item.metadata.Swarm_type|default(swarm_type)}}"
  when:
  - item.metadata.Swarm_type is not defined
